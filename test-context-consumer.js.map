{"version":3,"file":"test-context-consumer.js","sourceRoot":"","sources":["src/test-context-consumer.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAC,UAAU,EAAE,IAAI,EAAC,MAAM,KAAK,CAAC;AACrC,OAAO,EAAE,OAAO,EAAE,MAAM,cAAc,CAAC;AACvC,OAAO,EAAC,aAAa,EAAC,MAAM,mBAAmB,CAAC;AAChD,OAAO,EAAqB,gBAAgB,EAAE,MAAM,sBAAsB,CAAC;AAE3E;;;;;;GAMG;AAEI,IAAM,mBAAmB,GAAzB,MAAM,mBAAoB,SAAQ,UAAU;IAKxC,MAAM;QACb,OAAO,IAAI,CAAA,4DAA4D,IAAI,CAAC,aAAa,EAAE,YAAY,MAAM,CAAC;IAChH,CAAC;CACF,CAAA;AALC;IADC,OAAO,CAAC,EAAC,OAAO,EAAE,gBAAgB,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;0DACrB;AAHvB,mBAAmB;IAD/B,aAAa,CAAC,uBAAuB,CAAC;GAC1B,mBAAmB,CAQ/B","sourcesContent":["import {LitElement, html} from 'lit';\nimport { consume } from '@lit/context';\nimport {customElement} from 'lit/decorators.js';\nimport { ISolidAuthContext, solidAuthContext } from './solid-auth-context';\n\n/**\n * An example element.\n *\n * @fires count-changed - Indicates when the count changes\n * @slot - This element has a slot\n * @csspart button - The button\n */\n@customElement('test-context-consumer')\nexport class TestContextConsumer extends LitElement {\n\n  @consume({context: solidAuthContext, subscribe: true })\n  solidAuthData?: ISolidAuthContext;\n\n  override render() {\n    return html`<p>This is a test consumer. The value of oidcProvider is ${this.solidAuthData?.oidcProvider}</p>`;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'test-context-consumer': TestContextConsumer;\n  }\n}\n"]}