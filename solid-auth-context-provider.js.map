{"version":3,"file":"solid-auth-context-provider.js","sourceRoot":"","sources":["src/solid-auth-context-provider.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAC,UAAU,EAAE,IAAI,EAAC,MAAM,KAAK,CAAC;AACrC,OAAO,EAAC,OAAO,EAAC,MAAM,cAAc,CAAC;AACrC,OAAO,EAAqB,gBAAgB,EAAE,MAAM,sBAAsB,CAAC;AAC3E,OAAO,EAAC,aAAa,EAAC,MAAM,mBAAmB,CAAC;AAChD,OAAO,EAAE,MAAM,EAAE,MAAM,oBAAoB,CAAC;AAC5C,OAAO,EAAG,KAAK,EAAE,iBAAiB,EAAE,MAAM,oCAAoC,CAAA;AAE9E;;;;;;GAMG;AAEI,IAAM,wBAAwB,GAA9B,MAAM,wBAAyB,SAAQ,UAAU;IACtD;QACE,KAAK,EAAE,CAAC;QAUV,kBAAa,GAAsB;YACjC,YAAY,EAAE,IAAI,GAAG,CAAC,uBAAuB,CAAC;YAC9C,KAAK,EAAE,UAAU,CAAC,KAAK;YACvB,UAAU,EAAE,KAAK;SAClB,CAAC;QAbA,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAA;QACpB,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAQ,EAAE,EAAE;YACrD,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,IAAI,CAAC,aAAa,GAAG,EAAC,GAAG,IAAI,CAAC,aAAa,EAAE,YAAY,EAAG,CAAiB,CAAC,MAAM,EAAC,CAAA;QACvF,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;IACzD,CAAC;IASO,KAAK,CAAC,YAAY;QACxB,oDAAoD;QACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;YACzC,MAAM,KAAK,CAAC;gBACV,UAAU,EAAE,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,QAAQ,EAAE;gBACtD,WAAW,EAAE,MAAM,CAAC,QAAQ,CAAC,IAAI;gBACjC,UAAU,EAAE,gBAAgB;aAC7B,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAGQ,MAAM,KAAK,OAAO,IAAI,CAAA,eAAe,CAAA,CAAA,CAAC;CAChD,CAAA;AAnBC;IADC,OAAO,CAAC,EAAC,OAAO,EAAE,gBAAgB,EAAC,CAAC;+DAKnC;AAhBS,wBAAwB;IADpC,aAAa,CAAC,6BAA6B,CAAC;GAChC,wBAAwB,CA+BpC","sourcesContent":["import {LitElement, html} from 'lit';\nimport {provide} from '@lit/context';\nimport { ISolidAuthContext, solidAuthContext } from './solid-auth-context';\nimport {customElement} from 'lit/decorators.js';\nimport { EVENTS } from './constants/EVENTS';\nimport {  login, getDefaultSession } from '@inrupt/solid-client-authn-browser'\n\n/**\n * An example element.\n *\n * @fires count-changed - Indicates when the count changes\n * @slot - This element has a slot\n * @csspart button - The button\n */\n@customElement('solid-auth-context-provider')\nexport class SolidAuthContextProvider extends LitElement {\n  constructor() {\n    super();\n    console.log(\"hello\")\n    this.addEventListener(EVENTS.UPDATE_OIDC, (e: Event) => {\n      console.log(\"update\");\n      this.solidAuthData = {...this.solidAuthData, oidcProvider: (e as CustomEvent).detail}\n    });\n    this.addEventListener(EVENTS.LOGIN, this._handleLogin);\n  }\n\n  @provide({context: solidAuthContext})\n  solidAuthData: ISolidAuthContext = {\n    oidcProvider: new URL(\"http://localhost:3000\"),\n    fetch: globalThis.fetch,\n    isLoggedIn: false\n  };\n  \n  private async _handleLogin() {\n    // Start the Login Process if not already logged in.\n    if (!getDefaultSession().info.isLoggedIn) {\n      await login({\n        oidcIssuer: this.solidAuthData.oidcProvider.toString(),\n        redirectUrl: window.location.href,\n        clientName: \"Solid Calendar\"\n      });\n    }\n  }\n\n\n  override render() { return html`<slot></slot>`}\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'solid-auth-context-provider': SolidAuthContextProvider;\n  }\n}\n"]}