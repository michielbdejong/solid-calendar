{"version":3,"file":"solid-auth-context-provider.js","sourceRoot":"","sources":["src/solid-auth-context-provider.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAC,UAAU,EAAC,MAAM,KAAK,CAAC;AAC/B,OAAO,EAAC,OAAO,EAAC,MAAM,cAAc,CAAC;AACrC,OAAO,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,MAAM,sBAAsB,CAAC;AAC1E,OAAO,EAAC,aAAa,EAAC,MAAM,mBAAmB,CAAC;AAEhD;;;;;;GAMG;AAEI,IAAM,wBAAwB,GAA9B,MAAM,wBAAyB,SAAQ,UAAU;IAAjD;;QAGL,kBAAa,GAAG,IAAI,gBAAgB,EAAE,CAAC;IACzC,CAAC;CAAA,CAAA;AADC;IADC,OAAO,CAAC,EAAC,OAAO,EAAE,gBAAgB,EAAC,CAAC;+DACE;AAH5B,wBAAwB;IADpC,aAAa,CAAC,6BAA6B,CAAC;GAChC,wBAAwB,CAIpC","sourcesContent":["import {LitElement} from 'lit';\nimport {provide} from '@lit/context';\nimport { SolidAuthContext, solidAuthContext } from './solid-auth-context';\nimport {customElement} from 'lit/decorators.js';\n\n/**\n * An example element.\n *\n * @fires count-changed - Indicates when the count changes\n * @slot - This element has a slot\n * @csspart button - The button\n */\n@customElement('solid-auth-context-provider')\nexport class SolidAuthContextProvider extends LitElement {\n\n  @provide({context: solidAuthContext})\n  solidAuthData = new SolidAuthContext();\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'solid-auth-context-provider': SolidAuthContextProvider;\n  }\n}\n"]}