{"version":3,"file":"solid-auth-context.js","sourceRoot":"","sources":["src/solid-auth-context.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,aAAa,EAAC,MAAM,cAAc,CAAC;AAO3C,MAAM,OAAO,gBAAgB;IAA7B;QACU,kBAAa,GAAG,IAAI,GAAG,CAAC,uBAAuB,CAAC,CAAC;QACjD,WAAM,GAAG,UAAU,CAAC,KAAK,CAAC;QAC1B,gBAAW,GAAG,KAAK,CAAC;IAwB9B,CAAC;IAvBC,IAAW,YAAY;QACrB,OAAO,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;IAED,IAAW,YAAY,CAAC,WAAgB;QACtC,IAAI,CAAC,aAAa,GAAG,WAAW,CAAC;IACnC,CAAC;IAED,IAAW,KAAK;QACd,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IAED,IAAW,KAAK,CAAC,SAAoF;QACnG,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;IAC1B,CAAC;IAED,IAAW,UAAU;QACnB,OAAO,IAAI,CAAC,WAAW,CAAA;IACzB,CAAC;IAED,IAAW,UAAU,CAAC,QAAiB;QACrC,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAA;IAC7B,CAAC;CACF;AAED,MAAM,CAAC,MAAM,gBAAgB,GAAG,aAAa,CAAoB,MAAM,CAAC,kBAAkB,CAAC,CAAC,CAAC","sourcesContent":["import {createContext} from '@lit/context';\n\nexport interface ISolidAuthContext {\n  oidcProvider: URL;\n  fetch: (resource: string | URL | Request, options?: object) => Promise<Response>\n}\n\nexport class SolidAuthContext implements ISolidAuthContext {\n  private _oidcProvider = new URL(\"http://localhost:3000\");\n  private _fetch = globalThis.fetch;\n  private _isLoggedIn = false;\n  public get oidcProvider() {\n    return this._oidcProvider;\n  }\n\n  public set oidcProvider(newProvider: URL) {\n    this._oidcProvider = newProvider;\n  }\n\n  public get fetch() {\n    return this._fetch;\n  }\n\n  public set fetch(authFetch: (resource: string | URL | Request, options?: object) => Promise<Response>) {\n    this._fetch = authFetch;\n  }\n\n  public get isLoggedIn() {\n    return this._isLoggedIn\n  }\n\n  public set isLoggedIn(loggedIn: boolean) {\n    this._isLoggedIn = loggedIn\n  }\n}\n\nexport const solidAuthContext = createContext<ISolidAuthContext>(Symbol('solidAuthContext'));\n"]}