{"version":3,"file":"solid-login-button.js","sourceRoot":"","sources":["src/solid-login-button.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAC,UAAU,EAAE,IAAI,EAAC,MAAM,KAAK,CAAC;AACrC,OAAO,EAAC,aAAa,EAAC,MAAM,mBAAmB,CAAC;AAChD,OAAO,EAAE,MAAM,EAAE,MAAM,oBAAoB,CAAC;AAE5C;;;;;;GAMG;AAEI,IAAM,gBAAgB,GAAtB,MAAM,gBAAiB,SAAQ,UAAU;IAEtC,YAAY;QAClB,IAAI,CAAC,aAAa,CAAC,IAAI,WAAW,CAAC,MAAM,CAAC,KAAK,EAAE,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC,CAAC;IACrE,CAAC;IAEQ,MAAM;QACb,OAAO,IAAI,CAAA,kBAAkB,IAAI,CAAC,YAAY,iBAAiB,CAAC;IAClE,CAAC;CACF,CAAA;AATY,gBAAgB;IAD5B,aAAa,CAAC,oBAAoB,CAAC;GACvB,gBAAgB,CAS5B","sourcesContent":["import {LitElement, html} from 'lit';\nimport {customElement} from 'lit/decorators.js';\nimport { EVENTS } from './constants/EVENTS';\n\n/**\n * An example element.\n *\n * @fires count-changed - Indicates when the count changes\n * @slot - This element has a slot\n * @csspart button - The button\n */\n@customElement('solid-login-button')\nexport class SolidLoginButton extends LitElement {\n\n  private _handleLogin() {\n    this.dispatchEvent(new CustomEvent(EVENTS.LOGIN, {bubbles: true}));\n  }\n\n  override render() {\n    return html`<button @click=${this._handleLogin}>Login</button>`;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'solid-login-button': SolidLoginButton;\n  }\n}\n"]}